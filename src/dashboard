import React, { useState } from 'react';
import { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';

const daysOfWeek = ['Lunes', 'Martes', 'Miércoles', 'Jueves', 'Viernes', 'Sábado', 'Domingo'];

const dashboard = () => {
  console.log('dashboard component rendered'); // Mensaje de consola para depuración

  const [selectedDay, setSelectedDay] = useState('Lunes');
  const [rainAmount, setRainAmount] = useState(0);

  const calculateSales = (day, rain) => {
    console.log(`Calculating sales for ${day} with ${rain} mm of rain`); // Otro mensaje de consola
    const baseSales = {
      'Lunes': 100,
      'Martes': 90,
      'Miércoles': 95,
      'Jueves': 85,
      'Viernes': 110,
      'Sábado': 130,
      'Domingo': 120
    };
    
    const rainMultiplier = 1 + (rain / 100);
    return Math.round(baseSales[day] * rainMultiplier);
  };

  const generateChartData = () => {
    return daysOfWeek.map(day => ({
      day,
      ventas: calculateSales(day, day === selectedDay ? rainAmount : 0)
    }));
  };

  return (
    <div>
      <h1>Dashboard de Ventas de Pan y Lluvia</h1>
      <div>
        <label>Seleccionar día:</label>
        <select onChange={(e) => setSelectedDay(e.target.value)} value={selectedDay}>
          {daysOfWeek.map(day => (
            <option key={day} value={day}>{day}</option>
          ))}
        </select>
      </div>
      <div>
        <label>Cantidad de lluvia (mm):</label>
        <input
          type="range"
          min="0"
          max="100"
          step="1"
          value={rainAmount}
          onChange={(e) => setRainAmount(Number(e.target.value))}
        />
        <p>Lluvia: {rainAmount} mm</p>
      </div>
      <div style={{ height: '300px', width: '100%' }}>
        <ResponsiveContainer width="100%" height="100%">
          <LineChart data={generateChartData()}>
            <CartesianGrid strokeDasharray="3 3" />
            <XAxis dataKey="day" />
            <YAxis />
            <Tooltip />
            <Legend />
            <Line type="monotone" dataKey="ventas" stroke="#8884d8" activeDot={{ r: 8 }} />
          </LineChart>
        </ResponsiveContainer>
      </div>
      <p>
        Ventas de pan para {selectedDay}: {calculateSales(selectedDay, rainAmount)} unidades
      </p>
    </div>
  );
};

export default dashboard;


